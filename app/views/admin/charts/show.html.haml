/%script{:src => "https://code.highcharts.com/stock/highstock.js"}
-# %link{:href => "https://www.amcharts.com/lib/3/plugins/export/export.css", :media => "all", :rel => "stylesheet", :type => "text/css"}/
-# %script{:src => "http://www.amcharts.com/lib/3/plugins/export/export.min.js"}
%script{:src => "/assets/js/amcharts.js", :type => "text/javascript"}
%script{:src => "/assets/js/serial.js", :type => "text/javascript"}
%script{:src => "/assets/js/papaparse.js"}
= title(t('keppler.titles.show', model: "Charts"))
.wrapper
	.wrapper-body.container
		.actions
			- if can? :delete, Chart
				= link_to admin_chart_path(@chart), class: "btn-floating btn-flat right tooltipped", "data-position" => "bottom", "data-tooltip" => t("keppler.actions.delete"), method: :delete, data: { confirm: t("keppler.messages.data_confirm") } do
					= material_icon.md_18.delete.css_class("md-dark")
			- if can? :update, Chart
				= link_to edit_admin_chart_path(@chart), class: "right btn-floating btn-flat tooltipped", "data-position" => "bottom", "data-tooltip" =>t("keppler.actions.edit") do
					= material_icon.md_18.create.css_class("md-dark")
			= link_to admin_charts_path, class: "btn-floating btn-flat tooltipped", "data-position" => "bottom", "data-tooltip" => t("keppler.actions.back") do
				= material_icon.md_18.arrow_back.css_class("md-dark")
		.card
			.card-content
				%center.color-title= @chart.name.to_s.humanize
				%table.bordered
					%tbody
						%tr
							%th
								.display-label= t("activerecord.attributes.#{controller_name.singularize}.id")
							%td
								.display-value.fs-body-1.tc-black-2= @chart.id.to_s.humanize
						%tr
							%th
								.display-label Nombre
							%td
								.display-value.fs-body-1.tc-black-2= @chart.name.blank? ? '----------' : @chart.name
						%tr
							%th
								.display-label Archivo
							%td
								.display-value.fs-body-1.tc-black-2= @chart.file.blank? ? '----------' : @chart.file.to_s.split("/").last
			#chartdiv{:style => "width: 920px; height: 400px;"}
:javascript
	var rowSupremo = []
	var chart;
	var chartData = [];
	var chartCursor;
	var primer_valor = "#{@chart.value_one}"
	var segundo_valor = "#{@chart.value_two}"
	console.log(primer_valor)

	AmCharts.ready(function() {
		// SERIAL CHART
		chart = new AmCharts.AmSerialChart();
		chart.pathToImages = "/documents/";
		chart.dataProvider = chartData;
		chart.categoryField = "date";
		chart.dataDateFormat = "DD/MM/YYYY";
		// listen for "dataUpdated" event (fired when chart is rendered) and call zoomChart method when it happens
		chart.addListener("dataUpdated", zoomChart);
		// AXES
		// category
		var categoryAxis = chart.categoryAxis;
		categoryAxis.parseDates = true; // as our data is date-based, we set parseDates to true
		categoryAxis.minPeriod = "DD"; // our data is daily, so we set minPeriod to DD
		categoryAxis.dashLength = 1;
		categoryAxis.gridAlpha = 0.15;
		categoryAxis.minorGridEnabled = true;
		categoryAxis.axisColor = "#DADADA";

		// value
		var valueAxis = new AmCharts.ValueAxis();
		valueAxis.axisAlpha = 0.2;
		valueAxis.dashLength = 1;
		chart.addValueAxis(valueAxis);

		// GRAPH
		var graph = new AmCharts.AmGraph();
		graph.title = "Blue Line";
		graph.valueField = "venta";
		graph.bullet = "round";
		graph.bulletBorderColor = "#FFFFFF";
		graph.bulletBorderThickness = 2;
		graph.bulletBorderAlpha = 1;
		graph.lineThickness = 2;
		graph.lineColor = "#b5030d";
		graph.negativeLineColor = "#0352b5";
		graph.balloonText = `[[category]]<br><b><span style='font-size:14px;'>${segundo_valor}: [[value]]</span></b`;
		graph.hideBulletsCount = 50; // this makes the chart to hide bullets when there are more than 50 series in selection
		// console.log(graph);
		chart.addGraph(graph);

		var graph = new AmCharts.AmGraph();
		graph.title = "red line";
		graph.valueField = "compra";
		graph.bullet = "round";
		graph.bulletBorderColor = "#FFFFFF";
		graph.bulletBorderThickness = 2;
		graph.bulletBorderAlpha = 1;
		graph.lineThickness = 2;
		graph.lineColor = "rgb(32, 172, 212)";
		graph.negativeLineColor = "#0352b5";
		graph.balloonText = `[[category]]<br><b><span style='font-size:14px;'>${primer_valor}: [[value]]</span></b`;
		graph.hideBulletsCount = 50; // this makes the chart to hide bullets when there are more than 50 series in selection
		// console.log(graph);
		chart.addGraph(graph);

		// CURSOR
		chartCursor = new AmCharts.ChartCursor();
		chartCursor.cursorPosition = "mouse";
		chart.addChartCursor(chartCursor);

		// SCROLLBAR
		var chartScrollbar = new AmCharts.ChartScrollbar();
		chartScrollbar.graph = graph;
		chartScrollbar.scrollbarHeight = 40;
		chartScrollbar.color = "#FFFFFF";
		chartScrollbar.autoGridCount = true;
		chart.addChartScrollbar(chartScrollbar);

		// WRITE
		chart.write("chartdiv");

		parseCSV("#{@chart.file}");
	});


	function parseCSV(data) {

		Papa.parse("#{@chart.file}", {
			download: true,
			step: function(row, parser) {
				var snowden = row.data;
				// console.log(snowden);
				llenarArray(snowden);
			},
			complete: function(results, file) {
				console.log("Parsing complete:", results, file);
				rowSupremo.reverse().shift();
				console.log(rowSupremo);
				if (rowSupremo[0][0].length==3){llenarChart(rowSupremo);}
				else if (rowSupremo[0][0].length==2){llenarChartUno(rowSupremo);}
				else{console.log("CHART INVALIDO");}

			}
		});

		function llenarArray(data){
			rowSupremo.push(data);
		}

		function llenarChart(data){
			for (var i = 0; i < data.length; i++) {
				rowSupremo[i][0][1] = rowSupremo[i][0][1].replace(/,/g, '.');
				rowSupremo[i][0][2] = rowSupremo[i][0][2].replace(/,/g, '.');
				var date = rowSupremo[i][0][0];
				var value = rowSupremo[i][0][1];
				var value2 = rowSupremo[i][0][2];
				var dataObject = {
					date: date,
					compra: value,
					venta: value2
				};
				// add object to chartData array
				chartData.push(dataObject);
				// console.log(dataObject);
			}
			chart.validateData();
		}

		function llenarChartUno(data){
			for (var i = 0; i < data.length; i++) {

				rowSupremo[i][0][1] = rowSupremo[i][0][1].replace(/,/g, '.');

				for (let a=0; a<= rowSupremo[i][0][1].length; a++){
					if (rowSupremo[i][0][1][a] == "."){
						rowSupremo[i][0][1] = rowSupremo[i][0][1].split(".").join("");
					}
				}

				var date = rowSupremo[i][0][0];
				var value = rowSupremo[i][0][1];
				var dataObject = {
					date: date,
					compra: value,
				};
				// add object to chartData array
				chartData.push(dataObject);
				// console.log(dataObject);
			}
			chart.validateData();
		}

	}

	// this method is called when chart is first inited as we listen for "dataUpdated" event
	function zoomChart() {
	// different zoom methods can be used - zoomToIndexes, zoomToDates, zoomToCategoryValues
	chart.zoomToIndexes(chartData.length - 40, chartData.length - 1);
	}

	// changes cursor mode from pan to select
	function setPanSelect() {
	if (document.getElementById("rb1").checked) {
	chartCursor.pan = false;
	chartCursor.zoomable = true;

	} else {
	chartCursor.pan = true;
	}
	chart.validateNow();
	}


:scss
	th{width:20%;}
